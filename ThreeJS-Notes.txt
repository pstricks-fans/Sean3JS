1. Node.js:
  	node --version
	npm --version
   List installed packages:
	npm list --global --depth 0

2. Git: 
	git --version


3. TypeScript:
	npm install --global typescript
	tsc --version


4. VSCode 




#### PROJECT

mkdir Three.js-TypeScript-Tutorial
cd Three.js-TypeScript-Tutorial


npm init --yes

npm install  three          --save-dev 
npm install  @types/three   --save-dev

create folders:
 	dist\client
 	dist\server
 	src\client
 	src\server


add index.html to dist\client

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <title>Three.js TypeScript Tutorials by Sean Bradley : https://sbcode.net/threejs</title>
        <style>
            body {
                overflow: hidden;
                margin: 0px;
            }
        </style>
    </head>

    <body>
        <script type="module" src="bundle.js"></script>
    </body>
</html>


add tsconfig.json to src\client

{
    "compilerOptions": {
        "moduleResolution": "node",
        "strict": true
    },
    "include": [
        "**/*.ts"
    ]
}



##### WEBPACK


npm install webpack webpack-cli webpack-dev-server webpack-merge ts-loader --save-dev
npm install typescript --save-dev


add ./src/client/webpack.common.js

const path = require('path')

module.exports = {
    entry: './src/client/client.ts',
    module: {
        rules: [
            {
                test: /\.tsx?$/,
                use: 'ts-loader',
                exclude: /node_modules/,
            },
        ],
    },
    resolve: {
        extensions: ['.tsx', '.ts', '.js'],
    },
    output: {
        filename: 'bundle.js',
        path: path.resolve(__dirname, '../../dist/client'),
    },
}


add ./src/client/webpack.dev.js

const { merge } = require('webpack-merge')
const common = require('./webpack.common.js')
const path = require('path');

module.exports = merge(common, {
    mode: 'development',
    devtool: 'eval-source-map',
    devServer: {
        static: {
            directory: path.join(__dirname, '../../dist/client'),
        },
        hot: true,
    },
})


add ./package.json

  "dev": "webpack serve --config ./src/client/webpack.dev.js",


  to "scripts"


  ### RUN


  npm run dev
